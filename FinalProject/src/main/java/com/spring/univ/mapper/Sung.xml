<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="Sung">

	<resultMap type="HashMap" id="subjectMap">
		<result property="code" column="code" javaType="String" />
		<result property="subject" column="subject" javaType="String" />
		<result property="fk_hakbun" column="fk_hakbun" javaType="String" />
		<result property="name" column="name" javaType="String" />
		<result property="hakjum" column="hakjum" javaType="String" />
		<result property="classdate" column="classdate" javaType="String" />
		<result property="deptcode" column="deptcode" javaType="String" />
		<result property="deptName" column="deptName" javaType="String" />
		<result property="deptLocation" column="deptLocation" javaType="String" />
	</resultMap>

	<select id="getSubjectInfo" parameterType="String" resultMap="subjectMap"> 
		select A.code AS code, A.subject AS subject, A.fk_hakbun AS fk_hakbun, C.name AS name, A.hakjum AS hakjum
		, case A.classdate when '1' then '월' when '2' then '화' when '3' then '수' when '4' then '목' else '금' end  AS classdate
		, A.fk_deptcode AS deptcode, B.deptName AS deptName, B.deptLocation AS deptLocation
		from tbl_subject A
		JOIN tbl_department B
		on A.fk_deptcode = B.deptCode
		JOIN tbl_member C
		on A.fk_hakbun = C.hakbun
		where code = #{code}
	</select>
	
	
	<select id="getLessonBoard" parameterType="HashMap" resultType="com.spring.univ.model.LessonBoardVO">
		select seq, fk_hakbun, fk_code, name, subject, regDate, status, commentCount, filename
		from
		(
		    select row_number() over(order by seq desc) AS rno, seq, fk_hakbun, fk_code, name, subject, to_char(regdate,'yyyy-mm-dd hh24:mi:ss') as regDate, status, commentCount, filename
		    from tbl_lessonboard
		    where status = 1 and fk_code = #{code}
		   	<if test='searchType != "" and searchWord != ""'>
				 and lower( ${searchType} ) like '%' || lower( #{searchWord} ) || '%'
			</if>
		)
		where rno between #{startRno} and #{endRno}
	</select>
	
	
	<select id="getLessonBoardDetail" parameterType="HashMap" resultType="com.spring.univ.model.LessonBoardVO">
		select seq, fk_hakbun, fk_code, name, subject, content, pw, regDate, status, commentCount
		     , fileName, orgFilename, fileSize
		     , previousSeq, previousSubject
		     , nextSeq, nextSubject
		from
		(
		    select seq, fk_hakbun, fk_code, name, subject, content, pw, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS regDate, status, commentCount
		              , fileName, orgFilename, fileSize
		              , lead(seq, 1) over (order by seq desc) AS previousSeq, lead(subject, 1) over (order by seq desc) AS previousSubject
		              , lag(seq, 1) over (order by seq desc) AS nextSeq, lag(subject, 1) over (order by seq desc) AS nextSubject
		    from tbl_lessonboard
		    where status = 1 and fk_code = #{code}
		) A
		where seq = #{seq}
		order by seq desc
	</select>
	
	
	<resultMap type="HashMap" id="sugangMap">
		<result property="hakbun" column="hakbun" javaType="String" />
		<result property="code" column="code" javaType="String" />
		<result property="subject" column="subject" javaType="String" />
		<result property="teacher" column="teacher" javaType="String" />
		<result property="hakjum" column="hakjum" javaType="String" />
		<result property="classdate" column="classdate" javaType="String" />
		<result property="location" column="location" javaType="String" />
	</resultMap>
	
	<select id="getSugang" parameterType="String" resultMap="sugangMap">
		select hakbun, code, subject, teacher, hakjum, classdate, location
		from
		(
		select B.hakbun AS hakbun ,C.code AS code, C.subject AS subject, D.name AS teacher, C.hakjum AS hakjum
		, case C.classdate when '1' then '월' when '2' then '화' when '3' then '수' when '4' then '목' else '금' end  AS classdate
		, E.deptlocation || ' ' || E.deptname AS location
		from tbl_sugang A
		JOIN tbl_member B
		on A.fk_hakbun = B.hakbun
		JOIN tbl_subject C
		on A.fk_code = C.code
		JOIN tbl_member D
		ON C.fk_hakbun = D.hakbun
		JOIN tbl_department E
		ON c.fk_deptcode = E.deptcode
		)
		where hakbun = #{hakbun}
	</select>
	
	<select id="checkSugang" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_sugang
		where fk_hakbun = #{hakbun} and fk_code= #{code}
	</select>
	
	<select id="checkCode" parameterType="String" resultType="int">
		select count(*)
		from tbl_subject
		where code = #{sessionCode}
	</select>
	
	<resultMap type="HashMap" id="suupMap">
		<result property="code" column="code" javaType="String" />
		<result property="subject" column="subject" javaType="String" />
		<result property="hakjum" column="hakjum" javaType="String" />
		<result property="classdate" column="classdate" javaType="String" />
		<result property="deptcode" column="deptcode" javaType="String" />
		<result property="deptname" column="deptname" javaType="String" />
		<result property="deptlocation" column="deptlocation" javaType="String" />
		<result property="cnt" column="cnt" javaType="String" />
	</resultMap>
	
		
	<select id="getsuUp" parameterType="String" resultMap="suupMap">
		select code, subject, hakjum
		, case classdate when '1' then '월' when '2' then '화' when '3' then '수' when '4' then '목' else '금' end  AS classdate
		, deptcode, deptname, deptlocation, NVL(cnt, 0) AS cnt
		from tbl_subject A
		JOIN tbl_department B
		ON A.fk_deptcode = B.deptcode
		LEFT JOIN (select count(*) AS cnt, fk_code from tbl_sugang group by fk_code) C
		on A.code = C.fk_code
		where A.fk_hakbun = #{hakbun}
	</select>
	
	<select id="checkLesson" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_subject
		where fk_hakbun = #{hakbun} and code = #{code}
	</select>
	
	<insert id="lessonWriteEnd" parameterType="com.spring.univ.model.LessonBoardVO">
		<if test='fileName!=""'>
			insert into tbl_lessonboard(seq, fk_hakbun, fk_code, name, subject, content, pw, regDate, status, commentCount, fileName, orgFilename, fileSize)
			values(lessonBoardSeq.nextval, #{fk_hakbun}, #{fk_code}, #{name}, #{subject}, #{content}, #{pw},  default, default, default, #{fileName}, #{orgFilename}, #{fileSize})
		</if>
		<if test='fileName==""'>
			insert into tbl_lessonboard(seq, fk_hakbun, fk_code, name, subject, content, pw, regDate, status, commentCount)
			values(lessonBoardSeq.nextval, #{fk_hakbun}, #{fk_code}, #{name}, #{subject}, #{content}, #{pw},  default, default, default)
		</if>
	</insert>
	
	
	<insert id="addLessonBoardComment" parameterType="com.spring.univ.model.LessonBoardCommentVO">
		insert into tbl_lessonBoard_comment(seq, fk_hakbun, name, content, parentSeq, regDate)
		values(lessonboard_commentSeq.nextval, #{fk_hakbun}, #{name}, #{content}, #{parentSeq}, default)
	</insert>
	
	<select id="getLessonBoardComment" parameterType="String" resultType="com.spring.univ.model.LessonBoardCommentVO">
		select A.seq AS seq, A.fk_hakbun AS fk_hakbun, case B.authority when 0 then '학생 ' when 1 then '교수 ' end || A.name AS name, A.content AS content, to_char(A.regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		, A.parentSeq AS parentSeq
		from tbl_lessonBoard_comment A
		JOIN tbl_member B
		on A.fk_hakbun = B.hakbun
		where parentSeq = #{parentSeq}
		order by seq desc
	</select>
	
	
	<delete id="deleteLessonBoard" parameterType="String">
		delete from tbl_lessonBoard
		where seq = #{seq}
	</delete>
	
	<update id="editLessonBoard" parameterType="com.spring.univ.model.LessonBoardCommentVO">
		<if test='fileName!=""'>
			update tbl_lessonboard set subject = #{subject}, content = #{content}, regDate = sysdate, fileName = #{fileName}, orgFilename = #{orgFilename}, fileSize = #{fileSize}
			where seq = #{seq}
		</if>
		<if test='fileName==""'>
			update tbl_lessonboard set subject = #{subject}, content = #{content}, regDate = sysdate
			where seq = #{seq}
		</if>
	</update>
	
	
	<delete id="deleteLessonComment" parameterType="HashMap">
		delete from tbl_lessonboard_comment
		where seq = #{seq}
	</delete>
	
	<update id="updateCommentCnt">
		update tbl_lessonBoard set commentcount = commentcount + 1
		where seq = #{parentSeq}
	</update>
	
	<update id="downCommentCnt">
		update tbl_lessonBoard set commentcount = commentcount - 1
		where seq = #{parentSeq}
	</update>
	
	<select id="getTotalLessonPage" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_lessonBoard
		where status = 1 and fk_code = #{code}
	   	<if test='searchType != "" and searchWord != ""'>
			 and lower( ${searchType} ) like '%' || lower( #{searchWord} ) || '%'
		</if>
	</select>
	
	<select id="getHomeworkList" parameterType="String" resultType="com.spring.univ.model.HomeworkVO">
		select seq, fk_hakbun, fk_code, name, subject, content, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS regDate, commentCount, fileName, orgFilename, fileSize, status, deadline
		from tbl_homework
		where fk_code = #{code}
		order by seq desc 
	</select>
	
	<select id="getHomeworkComment" parameterType="String" resultType="com.spring.univ.model.HomeWorkCommentVO">
		select seq, parentSeq, fk_hakbun, name, content, fileName, orgFilename, FileSize,
		to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS regDate
		from tbl_homework_comment
		JOIN tbl_member
		on fk_hakbun = hakbun
		where fk_code = #{code}
		order by seq desc
	</select>
	
	<insert id="writeHomeworkComment" parameterType="com.spring.univ.model.HomeWorkCommentVO">
		<if test="fileName == null">
			insert into tbl_homework_comment(seq, parentSeq, fk_hakbun, content, fk_code, regDate)
			values(homeworkCommentSeq.nextval, #{parentSeq}, #{fk_hakbun}, #{content}, #{fk_code}, default)
		</if>
		<if test="fileName != null">
			insert into tbl_homework_comment(seq, parentSeq, fk_hakbun, content, fk_code, regDate, fileName, orgFilename, fileSize)
			values(homeworkCommentSeq.nextval, #{parentSeq}, #{fk_hakbun}, #{content}, #{fk_code}, default, #{fileName}, #{orgFilename}, #{fileSize})
		</if>
	</insert>
	
	<update id="plusCommentCnt" parameterType="com.spring.univ.model.HomeWorkCommentVO">
		update tbl_homework set commentCount = commentCount + 1
		where seq = #{parentSeq}
	</update>
	
	<update id="updateStatus" parameterType="String">
		update tbl_homework set status = 1
		where seq = #{seq}
	</update>
	
	<insert id="homeworkWriteEnd" parameterType="com.spring.univ.model.HomeworkVO">
		<if test='fileName != ""'>
			insert into tbl_homework(seq, fk_hakbun, fk_code, name, subject, content, regDate, commentCount, fileName, orgFilename, fileSize, status, deadline)
			values(homeworkSeq.nextval, #{fk_hakbun}, #{fk_code}, #{name}, #{subject}, #{content}, default, default, #{fileName}, #{orgFilename}, #{fileSize}, default, default)
		</if>
		
		<if test='fileName == ""'>
			insert into tbl_homework(seq, fk_hakbun, fk_code, name, subject, content, regDate, commentCount, status, deadline)
			values(homeworkSeq.nextval, #{fk_hakbun}, #{fk_code}, #{name}, #{subject}, #{content}, default, default, default, default)
		</if>
	</insert>
</mapper>